<html><head><base href="https://example.com/empresas/">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Directorio Empresarial</title>
<style>
:root {
  --primary: #4976F9;
  --secondary: #6B5BDB;
  --light: #f5f6fa;
  --text: #2c3e50;
  --shadow: 0 2px 10px rgba(0,0,0,0.08);
}

/* Sidebar and header static background */
.sidebar, .header {
  background: linear-gradient(45deg, 
    rgba(73, 118, 249, 1) 0%, 
    rgba(107, 91, 219, 0.8) 50%,
    rgba(73, 118, 249, 1) 100%);
  transition: background-position 0.5s ease-in-out;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Segoe UI', system-ui, sans-serif;
}

body {
  background: var(--light);
}

.sidebar {
  position: fixed;
  left: 0;
  top: 0;
  height: 100vh;
  width: 250px;
  padding: 2rem 1rem;
  box-shadow: var(--shadow);
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  color: white;
  z-index: 100;
}

.sidebar .register-btn {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  width: 100%;
  background: rgba(255,255,255,0.1);
  border: 1px solid rgba(255,255,255,0.2);
  color: white;
  padding: 1rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
  margin: 0.25rem 0;
  position: relative;
  overflow: hidden;
}

.sidebar .register-btn:hover {
  background: rgba(255,255,255,0.2);
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

.sidebar .register-btn:active {
  transform: translateY(0);
}

.sidebar .register-btn svg {
  width: 20px;
  height: 20px;
  fill: white;
}

.sidebar .register-btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: rgba(255,255,255,0.1);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  transition: all 0.4s ease;
}

.sidebar .register-btn:active::after {
  transform: translate(-50%, -50%) scale(2);
  opacity: 1;
}

.sidebar .bulk-upload-btn {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.2);
}

.sidebar .bulk-upload-btn:hover {
  background: rgba(255,255,255,0.1);
  border-color: rgba(255,255,255,0.4);
}

.sidebar .link-btn {
  text-decoration: none;
  background: rgba(255,255,255,0.1);
  border: 1px solid rgba(255,255,255,0.2);
  color: white;
  padding: 1rem;
  border-radius: 8px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  transition: all 0.3s ease;
  margin: 0.25rem 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  width: 100%;
}

.sidebar .link-btn:hover {
  background: rgba(255,255,255,0.2);
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

.sidebar .link-btn svg {
  width: 20px;
  height: 20px;
  fill: white;
}

.main-content {
  margin-left: 250px;
  padding: 20px;
}

.header {
  color: white;
  padding: 1.5rem;
  box-shadow: var(--shadow);
  display: flex;
  align-items: center;
  gap: 1rem;
}

.header img {
  height: 40px;
  filter: brightness(0) invert(1);
}

.search-container {
  max-width: 1200px;
  margin: 2rem auto;
  padding: 0 1rem;
}

.search-container p {
  margin: 1rem 0;
  color: var(--text);
}

.search-container a {
  color: var(--primary);
  text-decoration: none;
  font-weight: 500;
}

.search-container a:hover {
  text-decoration: underline;
}

.search-box {
  width: 100%;
  padding: 1rem;
  border: 2px solid var(--secondary);
  border-radius: 8px;
  font-size: 1.1rem;
  transition: all 0.3s ease;
}

.search-box:focus {
  outline: none;
  box-shadow: 0 0 5px var(--secondary);
}

.filters {
  display: flex;
  gap: 1rem;
  margin: 1rem 0;
  flex-wrap: wrap;
}

.filter-btn {
  padding: 0.6rem 1.2rem;
  border: 1px solid #e0e0e0;
  background: white;
  border-radius: 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  font-weight: 500;
  box-shadow: var(--shadow);
  position: relative;
  overflow: hidden;
}

.filter-btn:hover {
  background: var(--secondary);
  color: white;
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.filter-btn:active {
  transform: translateY(0);
}

.filter-btn.active {
  background: var(--primary);
  color: white;
  transform: scale(1.05);
}

.filter-btn::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: rgba(255,255,255,0.2);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  opacity: 0;
  transition: all 0.4s ease;
}

.filter-btn:active::after {
  transform: translate(-50%, -50%) scale(2);
  opacity: 1;
}

.companies-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
}

.company-card {
  background: white;
  border: 1px solid rgba(0,0,0,0.08);
  border-radius: 10px;
  padding: 1.5rem;
  box-shadow: var(--shadow);
  transition: all 0.3s ease;
  position: relative;
}

.company-card:hover {
  transform: translateY(-5px);
}

.company-logo {
  width: 100px;
  height: 100px;
  font-size: 2.5rem;
  font-weight: bold;
  color: var(--primary);
  background: var(--light);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
}

.company-info h3 {
  color: var(--primary);
  margin-bottom: 0.5rem;
}

.company-category {
  display: inline-block;
  background: var(--light);
  padding: 0.2rem 0.8rem;
  border-radius: 15px;
  font-size: 0.9rem;
  margin: 0.5rem 0;
}

.pagination {
  display: flex;
  justify-content: center;
  gap: 0.5rem;
  margin: 2rem 0;
}

.page-btn {
  padding: 0.5rem 1rem;
  border: none;
  background: white;
  cursor: pointer;
  border-radius: 5px;
}

.page-btn.active {
  background: var(--secondary);
  color: white;
}

.delete-company {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  color: #dc3545;
  cursor: pointer;
  padding: 0.5rem;
  font-size: 1.2rem;
  opacity: 0;
  transition: all 0.3s ease;
}

.company-card:hover .delete-company {
  opacity: 1;
}

.delete-company:hover {
  color: #c82333;
  transform: scale(1.1);
}

@media (max-width: 768px) {
  .companies-grid {
    grid-template-columns: 1fr;
  }
}

/* Estilos para el formulario de registro */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0,0,0,0.5);
  z-index: 1000;
  align-items: center;
  justify-content: center;
}

.modal.active {
  display: flex;
}

.modal-content {
  background: white;
  padding: 2rem;
  border-radius: 10px;
  width: 90%;
  max-width: 600px;
  max-height: 90vh;
  overflow-y: auto;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  display: block;
  margin-bottom: 0.5rem;
  color: var(--primary);
}

.form-group input,
.form-group textarea,
.form-group select {
  width: 100%;
  padding: 0.8rem;
  border: 1px solid #e0e0e0;
  border-radius: 5px;
  font-size: 1rem;
  transition: all 0.3s ease;
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
  border-color: var(--secondary);
  box-shadow: 0 0 0 2px rgba(94, 132, 250, 0.1);
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.close-btn {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: var(--primary);
}

.submit-btn {
  background: linear-gradient(135deg, var(--primary), var(--secondary));
  color: white;
  padding: 0.8rem 2rem;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  width: 100%;
  transition: all 0.3s ease;
  font-weight: 500;
}

.submit-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0,0,0,0.15);
}

.template-link {
  display: inline-block;
  color: var(--secondary);
  text-decoration: none;
  margin: 1rem 0;
  font-weight: bold;
}

.template-link:hover {
  text-decoration: underline;
}

/* Loading styles */
.loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255,255,255,0.9);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 2000;
}

.spinner {
  width: 50px;
  height: 50px;
  border: 3px solid #f3f3f3;
  border-top: 3px solid var(--primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.categories-list {
  margin-top: 2rem;
}

.category-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.8rem;
  background: var(--light);
  margin: 0.5rem 0;
  border-radius: 5px;
}

.delete-category {
  color: #dc3545;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
}

.delete-category:hover {
  color: #c82333;
}
</style>
<script src="https://cdn.sheetjs.com/xlsx-0.19.3/package/dist/xlsx.full.min.js"></script>
</head>
<body>
  <div class="sidebar">
    <h2>Acciones</h2>
    <button class="register-btn" id="openRegister">
      <svg viewBox="0 0 24 24">
        <path d="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
      </svg>
      Registrar Empresa
    </button>
    <button class="register-btn bulk-upload-btn" id="openBulkUpload">
      <svg viewBox="0 0 24 24">
        <path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M14,18V16H7V18H14M17,14V12H7V14H17M14,9V3.5L18.5,8H14V9Z"/>
      </svg>
      Subida Masiva
    </button>
    <button class="register-btn" id="manageCategoriesBtn">
      <svg viewBox="0 0 24 24">
        <path d="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z"/>
      </svg>
      Gestionar Categor√≠as
    </button>
    <a href="?viewer=true" class="link-btn">
      <svg viewBox="0 0 24 24">
        <path d="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z"/>
      </svg>
      Link de Visualizaci√≥n
    </a>
  </div>
  
  <div class="main-content">
    <header class="header">
      <img src="https://www.icardcolombia.com/wp-content/uploads/2023/07/logo.png.webp" alt="iCard Colombia logo" height="40">
      <h1>Directorio Empresarial</h1>
    </header>

    <div class="search-container">
      <input type="text" class="search-box" placeholder="Buscar empresas..." id="searchInput">
      
      <div class="filters">
        <button class="filter-btn" data-category="todos">Todos</button>
        <button class="filter-btn" data-category="tecnologia">Tecnolog√≠a</button>
        <button class="filter-btn" data-category="servicios">Servicios</button>
        <button class="filter-btn" data-category="comercio">Comercio</button>
        <button class="filter-btn" data-category="industrial">Industrial</button>
      </div>
    </div>

    <div class="companies-grid" id="companiesContainer">
      <!-- Las tarjetas de empresas se generar√°n din√°micamente -->
    </div>

    <div class="pagination" id="pagination">
      <!-- La paginaci√≥n se generar√° din√°micamente -->
    </div>

    <div class="modal" id="registerModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Registrar Nueva Empresa</h2>
          <button class="close-btn" id="closeModal">&times;</button>
        </div>
        <form id="registerForm">
          <div class="form-group">
            <label for="companyName">Nombre de la Empresa</label>
            <input type="text" id="companyName" required>
          </div>
          <div class="form-group">
            <label for="companyCategory">Categor√≠a</label>
            <select id="companyCategory" required>
              <option value="tecnologia">Tecnolog√≠a</option>
              <option value="servicios">Servicios</option>
              <option value="comercio">Comercio</option>
              <option value="industrial">Industrial</option>
            </select>
          </div>
          <div class="form-group">
            <label for="companyDescription">Descripci√≥n</label>
            <textarea id="companyDescription" rows="3" required></textarea>
          </div>
          <div class="form-group">
            <label for="companyAddress">Direcci√≥n</label>
            <input type="text" id="companyAddress" required>
          </div>
          <div class="form-group">
            <label for="companyPhone">Tel√©fono</label>
            <input type="tel" id="companyPhone" required>
          </div>
          <div class="form-group">
            <label for="companyEmail">Email</label>
            <input type="email" id="companyEmail" required>
          </div>
          <div class="form-group">
            <label for="companyIcard">Link Tarjeta Digital (iCard)</label>
            <input type="url" id="companyIcard" placeholder="https://icard.com/your-card" required>
          </div>
          <button type="submit" class="submit-btn">Registrar Empresa</button>
        </form>
      </div>
    </div>

    <div class="modal" id="bulkUploadModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Subida Masiva de Empresas</h2>
          <button class="close-btn" id="closeBulkModal">&times;</button>
        </div>
        <div class="form-group">
          <p>Descargue la plantilla y s√∫bala con sus datos:</p>
          <a href="#" class="template-link" id="downloadTemplate">Descargar Plantilla Excel</a>
        </div>
        <div class="form-group">
          <label for="excelFile">Archivo Excel</label>
          <input type="file" id="excelFile" accept=".xlsx,.xls" required>
        </div>
        <button class="submit-btn" id="uploadExcel">Subir Empresas</button>
      </div>
    </div>

    <div class="modal" id="categoriesModal">
      <div class="modal-content">
        <div class="modal-header">
          <h2>Gestionar Categor√≠as</h2>
          <button class="close-btn" id="closeCategoriesModal">&times;</button>
        </div>
        <div class="form-group">
          <label for="newCategory">Nueva Categor√≠a</label>
          <input type="text" id="newCategory" placeholder="Nombre de la categor√≠a">
          <button class="submit-btn" id="addCategoryBtn" style="margin-top: 1rem;">Agregar Categor√≠a</button>
        </div>
        <div class="categories-list" id="categoriesList">
          <!-- Categories will be listed here -->
        </div>
      </div>
    </div>

    <script>
// Base de datos simulada de empresas
const companies = [
  {
    id: 1,
    name: "TechSolutions Inc",
    category: "tecnologia",
    description: "Soluciones tecnol√≥gicas innovadoras",
    address: "Calle Principal 123",
    phone: "+1234567890",
    email: "contact@techsolutions.com",
    icard: "https://icard.com/techsolutions"
  },
  {
    id: 2,
    name: "ServicePro",
    category: "servicios",
    description: "Servicios profesionales de consultor√≠a",
    address: "Avenida Central 456",
    phone: "+1234567891",
    email: "info@servicepro.com",
    icard: "https://icard.com/servicepro"
  },
  {
    id: 3,
    name: "ComercioMax",
    category: "comercio",
    description: "L√≠der en distribuci√≥n comercial",
    address: "Plaza Mayor 789",
    phone: "+1234567892",
    email: "ventas@comerciomax.com",
    icard: "https://icard.com/comerciomax"
  },
  // A√±ade m√°s empresas aqu√≠...
];

let currentCategory = 'todos';
let currentPage = 1;
const itemsPerPage = 6;

// Function to show loading overlay
function showLoading() {
  const loadingDiv = document.createElement('div');
  loadingDiv.className = 'loading-overlay';
  loadingDiv.innerHTML = `
    <div class="spinner"></div>
    <p>Procesando...</p>
  `;
  document.body.appendChild(loadingDiv);
}

function hideLoading() {
  const loading = document.querySelector('.loading-overlay');
  if (loading) loading.remove();
}

// Function to filter and display companies
async function displayCompanies(category = 'todos', searchTerm = '') {
  const urlParams = new URLSearchParams(window.location.search);
  const isViewerMode = urlParams.has('viewer');

  const filtered = companies.filter(company => {
    const matchesCategory = category === 'todos' || company.category === category;
    const matchesSearch = company.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         company.description.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesCategory && matchesSearch;
  });

  const startIndex = (currentPage - 1) * itemsPerPage;
  const paginatedCompanies = filtered.slice(startIndex, startIndex + itemsPerPage);

  const container = document.getElementById('companiesContainer');
  container.innerHTML = '';

  paginatedCompanies.forEach(company => {
    const card = document.createElement('div');
    card.className = 'company-card';
    card.innerHTML = `
      ${!isViewerMode ? `<button class="delete-company" data-id="${company.id}" title="Eliminar empresa">&times;</button>` : ''}
      <div class="company-logo">
        ${company.name.charAt(0)}
      </div>
      <div class="company-info">
        <h3>${company.name}</h3>
        <span class="company-category">${company.category}</span>
        <p>${company.description}</p>
        <p><strong>Direcci√≥n:</strong> ${company.address}</p>
        <p><strong>Tel√©fono:</strong> ${company.phone}</p>
        <p><strong>Email:</strong> ${company.email}</p>
        <p><strong>Tarjeta Digital:</strong> <a href="${company.icard}" target="_blank">Ver iCard</a></p>
      </div>
    `;

    // Add delete handler
    const deleteBtn = card.querySelector('.delete-company');
    if (deleteBtn) {
      deleteBtn.addEventListener('click', (e) => {
        e.stopPropagation();
        deleteCompany(company.id);
      });
    }

    container.appendChild(card);
  });

  updatePagination(filtered.length);
}

// Function to update pagination
function updatePagination(totalItems) {
  const totalPages = Math.ceil(totalItems / itemsPerPage);
  const pagination = document.getElementById('pagination');
  pagination.innerHTML = '';

  for (let i = 1; i <= totalPages; i++) {
    const button = document.createElement('button');
    button.className = `page-btn ${currentPage === i ? 'active' : ''}`;
    button.textContent = i;
    button.onclick = () => {
      currentPage = i;
      displayCompanies(currentCategory, document.getElementById('searchInput').value);
    };
    pagination.appendChild(button);
  }
}

// Add delete company function
function deleteCompany(id) {
  if (confirm('¬øEst√° seguro de que desea eliminar esta empresa?')) {
    showLoading();
    
    // Simulate API call
    setTimeout(() => {
      const index = companies.findIndex(c => c.id === id);
      if (index !== -1) {
        companies.splice(index, 1);
        
        // If current page is empty after deletion, go to previous page
        const totalPages = Math.ceil(companies.length / itemsPerPage);
        if (currentPage > totalPages && currentPage > 1) {
          currentPage--;
        }
        
        displayCompanies(currentCategory, document.getElementById('searchInput').value);
        hideLoading();
        alert('Empresa eliminada exitosamente');
      }
    }, 500);
  }
}

// Function to check for viewer mode
function checkViewerMode() {
  const urlParams = new URLSearchParams(window.location.search);
  
  if (urlParams.has('viewer')) {
    const sidebar = document.querySelector('.sidebar');
    if (sidebar) {
      sidebar.style.display = 'none';
    }
    const mainContent = document.querySelector('.main-content');
    if (mainContent) {
      mainContent.style.marginLeft = '0';
    }
  }
}

// Functionality for register modal
window.addEventListener('load', () => {
  checkViewerMode();
  
  // Initialize elements after DOM is loaded
  const modal = document.getElementById('registerModal');
  const openBtn = document.getElementById('openRegister');
  const closeBtn = document.getElementById('closeModal');
  const registerForm = document.getElementById('registerForm');
  
  // Only add event listeners if elements exist
  if (openBtn) {
    openBtn.addEventListener('click', () => {
      if (modal) modal.classList.add('active');
    });
  }
  
  if (closeBtn) {
    closeBtn.addEventListener('click', () => {
      if (modal) modal.classList.remove('active');
    });
  }
  
  if (modal) {
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('active');
      }
    });
  }

  // Move modal functionality inside load event
  if (registerForm) {
    registerForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const newCompany = {
        id: companies.length + 1,
        name: document.getElementById('companyName').value.trim(),
        category: document.getElementById('companyCategory').value,
        description: document.getElementById('companyDescription').value.trim(),
        address: document.getElementById('companyAddress').value.trim(),
        phone: document.getElementById('companyPhone').value.trim(),
        email: document.getElementById('companyEmail').value.trim(),
        icard: document.getElementById('companyIcard').value.trim()
      };

      const errors = validateCompanyData(newCompany);
      
      if (errors.length > 0) {
        alert('Por favor corrija los siguientes errores:\n\n' + errors.join('\n'));
        return;
      }

      showLoading();
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      companies.push(newCompany);
      registerForm.reset();
      if (modal) modal.classList.remove('active');
      hideLoading();
      displayCompanies(currentCategory, document.getElementById('searchInput').value);
      alert('Empresa registrada exitosamente');
    });
  }

  // Initialize category elements
  updateCategorySelect();
  updateFilterButtons();

  // Initialize display
  displayCompanies();
});

// Validate company data
function validateCompanyData(company) {
  const errors = [];
  
  if (!company.name || company.name.length < 2) {
    errors.push('El nombre de la empresa debe tener al menos 2 caracteres');
  }
  
  if (!company.email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(company.email)) {
    errors.push('Email inv√°lido');
  }
  
  if (!company.phone || !/^\+?[\d\s-]{8,}$/.test(company.phone)) {
    errors.push('Tel√©fono inv√°lido');
  }
  
  if (!company.icard || !/^https?:\/\//.test(company.icard)) {
    errors.push('La URL de iCard debe comenzar con http:// o https://');
  }
  
  return errors;
}

// Bulk Upload functionality
const bulkUploadModal = document.getElementById('bulkUploadModal');
const openBulkBtn = document.getElementById('openBulkUpload');
const closeBulkBtn = document.getElementById('closeBulkModal');
const downloadTemplateBtn = document.getElementById('downloadTemplate');
const uploadExcelBtn = document.getElementById('uploadExcel');

openBulkBtn.addEventListener('click', () => {
  bulkUploadModal.classList.add('active');
});

closeBulkBtn.addEventListener('click', () => {
  bulkUploadModal.classList.remove('active');
});

bulkUploadModal.addEventListener('click', (e) => {
  if (e.target === bulkUploadModal) {
    bulkUploadModal.classList.remove('active');
  }
});

// Generate and download template
downloadTemplateBtn.addEventListener('click', (e) => {
  e.preventDefault();
  
  const template = [
    ['Nombre Empresa', 'Categor√≠a', 'Descripci√≥n', 'Direcci√≥n', 'Tel√©fono', 'Email', 'Link iCard'],
    ['TechSolutions Inc', 'tecnologia', 'Soluciones tecnol√≥gicas innovadoras', 'Calle Principal 123', '+1234567890', 'contact@techsolutions.com', 'https://icard.com/techsolutions'],
    ['ServicePro', 'servicios', 'Servicios profesionales de consultor√≠a', 'Avenida Central 456', '+1234567891', 'info@servicepro.com', 'https://icard.com/servicepro'],
    ['ComercioMax', 'comercio', 'L√≠der en distribuci√≥n comercial', 'Plaza Mayor 789', '+1234567892', 'ventas@comerciomax.com', 'https://icard.com/comerciomax'],
    ['* INSTRUCCIONES:', '', '', '', '', '', ''],
    ['* Categor√≠as v√°lidas:', 'tecnologia', 'servicios', 'comercio', 'industrial', '', ''],
    ['* Todos los campos son obligatorios', '', '', '', '', '', ''],
    ['* El tel√©fono debe incluir c√≥digo de pa√≠s', '', '', '', '', '', ''],
    ['* El Link iCard debe comenzar con https://', '', '', '', '', '', '']
  ];
  
  const wb = XLSX.utils.book_new();
  const ws = XLSX.utils.aoa_to_sheet(template);
  ws['!cols'] = [
    {wch: 20}, 
    {wch: 15}, 
    {wch: 40}, 
    {wch: 30}, 
    {wch: 15}, 
    {wch: 25}, 
    {wch: 30}
  ];
  
  XLSX.utils.book_append_sheet(wb, ws, "Plantilla Empresas");
  XLSX.writeFile(wb, "plantilla_empresas.xlsx");
});

// Handle file upload
uploadExcelBtn.addEventListener('click', () => {
  const fileInput = document.getElementById('excelFile');
  const file = fileInput.files[0];
  
  if (!file) {
    alert('Por favor seleccione un archivo Excel');
    return;
  }

  const reader = new FileReader();
  reader.onload = function(e) {
    try {
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, {type: 'array'});
      const firstSheet = workbook.Sheets[workbook.SheetNames[0]];
      const jsonData = XLSX.utils.sheet_to_json(firstSheet);

      const validCompanies = jsonData.filter(row => {
        return row['Nombre Empresa'] && 
               row['Categor√≠a'] && 
               row['Descripci√≥n'] && 
               row['Direcci√≥n'] && 
               row['Tel√©fono'] && 
               row['Email'] && 
               row['Link iCard'];
      });

      if (validCompanies.length === 0) {
        throw new Error('No se encontraron datos v√°lidos en el archivo Excel');
      }

      validCompanies.forEach(row => {
        const newCompany = {
          id: companies.length + 1,
          name: String(row['Nombre Empresa'] || ''),
          category: String(row['Categor√≠a'] || 'otros'),
          description: String(row['Descripci√≥n'] || ''),
          address: String(row['Direcci√≥n'] || ''),
          phone: String(row['Tel√©fono'] || ''),
          email: String(row['Email'] || ''),
          icard: String(row['Link iCard'] || '')
        };
        companies.push(newCompany);
      });

      bulkUploadModal.classList.remove('active');
      fileInput.value = '';
      displayCompanies(currentCategory, document.getElementById('searchInput').value);
      alert(`${validCompanies.length} empresas importadas exitosamente`);
    } catch (error) {
      console.error('Error processing Excel file:', error);
      alert('Error al procesar el archivo Excel: ' + error.message);
    }
  };

  reader.onerror = function(error) {
    console.error('Error reading file:', error);
    alert('Error al leer el archivo');
  };

  reader.readAsArrayBuffer(file);
});

// Categories management
let categories = ['tecnologia', 'servicios', 'comercio', 'industrial'];

const categoriesModal = document.getElementById('categoriesModal');
const manageCategoriesBtn = document.getElementById('manageCategoriesBtn');
const closeCategoriesModal = document.getElementById('closeCategoriesModal');
const addCategoryBtn = document.getElementById('addCategoryBtn');
const categoriesList = document.getElementById('categoriesList');

// Update category select in registration form
function updateCategorySelect() {
  const select = document.getElementById('companyCategory');
  select.innerHTML = '';
  categories.forEach(category => {
    const option = document.createElement('option');
    option.value = category;
    option.textContent = category.charAt(0).toUpperCase() + category.slice(1);
    select.appendChild(option);
  });
}

// Update filter buttons
function updateFilterButtons() {
  const filters = document.querySelector('.filters');
  filters.innerHTML = `
    <button class="filter-btn active" data-category="todos">Todos</button>
    ${categories.map(category => 
      `<button class="filter-btn" data-category="${category}">${category.charAt(0).toUpperCase() + category.slice(1)}</button>`
    ).join('')}
  `;
  
  // Reattach event listeners
  document.querySelectorAll('.filter-btn').forEach(button => {
    button.addEventListener('click', () => {
      currentCategory = button.dataset.category;
      currentPage = 1;
      displayCompanies(currentCategory, document.getElementById('searchInput').value);
      
      // Update active state
      document.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
    });
  });
}

// Render categories list
function renderCategories() {
  categoriesList.innerHTML = categories.map(category => `
    <div class="category-item">
      <span>${category.charAt(0).toUpperCase() + category.slice(1)}</span>
      <button class="delete-category" data-category="${category}">&times;</button>
    </div>
  `).join('');
  
  // Add delete handlers
  document.querySelectorAll('.delete-category').forEach(button => {
    button.addEventListener('click', () => {
      const category = button.dataset.category;
      if (categories.length <= 1) {
        alert('Debe mantener al menos una categor√≠a');
        return;
      }
      if (confirm(`¬øEst√° seguro de eliminar la categor√≠a "${category}"?`)) {
        categories = categories.filter(c => c !== category);
        renderCategories();
        updateCategorySelect();
        updateFilterButtons();
      }
    });
  });
}

// Modal handlers
manageCategoriesBtn.addEventListener('click', () => {
  categoriesModal.classList.add('active');
  renderCategories();
});

closeCategoriesModal.addEventListener('click', () => {
  categoriesModal.classList.remove('active');
});

addCategoryBtn.addEventListener('click', () => {
  const newCategory = document.getElementById('newCategory').value.trim().toLowerCase();
  
  if (!newCategory) {
    alert('Por favor ingrese un nombre de categor√≠a');
    return;
  }
  
  if (categories.includes(newCategory)) {
    alert('Esta categor√≠a ya existe');
    return;
  }
  
  categories.push(newCategory);
  document.getElementById('newCategory').value = '';
  renderCategories();
  updateCategorySelect();
  updateFilterButtons();
});

// Handle registration link
function handleRegistrationLink() {
  const urlParams = new URLSearchParams(window.location.search);
  if (urlParams.has('register')) {
    const modal = document.getElementById('registerModal');
    modal.classList.add('active');
  }
}

// Add to window load event
window.addEventListener('load', () => {
  checkViewerMode();
  
  // Initialize elements after DOM is loaded
  const modal = document.getElementById('registerModal');
  const openBtn = document.getElementById('openRegister');
  const closeBtn = document.getElementById('closeModal');
  const registerForm = document.getElementById('registerForm');
  
  // Only add event listeners if elements exist
  if (openBtn) {
    openBtn.addEventListener('click', () => {
      if (modal) modal.classList.add('active');
    });
  }
  
  if (closeBtn) {
    closeBtn.addEventListener('click', () => {
      if (modal) modal.classList.remove('active');
    });
  }
  
  if (modal) {
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('active');
      }
    });
  }

  // Move modal functionality inside load event
  if (registerForm) {
    registerForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const newCompany = {
        id: companies.length + 1,
        name: document.getElementById('companyName').value.trim(),
        category: document.getElementById('companyCategory').value,
        description: document.getElementById('companyDescription').value.trim(),
        address: document.getElementById('companyAddress').value.trim(),
        phone: document.getElementById('companyPhone').value.trim(),
        email: document.getElementById('companyEmail').value.trim(),
        icard: document.getElementById('companyIcard').value.trim()
      };

      const errors = validateCompanyData(newCompany);
      
      if (errors.length > 0) {
        alert('Por favor corrija los siguientes errores:\n\n' + errors.join('\n'));
        return;
      }

      showLoading();
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      companies.push(newCompany);
      registerForm.reset();
      if (modal) modal.classList.remove('active');
      hideLoading();
      displayCompanies(currentCategory, document.getElementById('searchInput').value);
      alert('Empresa registrada exitosamente');
    });
  }

  // Initialize category elements
  updateCategorySelect();
  updateFilterButtons();

  // Initialize display
  displayCompanies();
});

// Inicializar la visualizaci√≥n
displayCompanies();
</script>
  </div>
</body>
</html>
